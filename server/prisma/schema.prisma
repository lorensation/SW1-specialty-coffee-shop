// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client { provider = "prisma-client-js" }

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

enum Role { USER ADMIN }

model User {
  id           String   @id @default(cuid())
  email        String   @unique
  passwordHash String
  name         String
  avatarUrl    String?
  role         Role     @default(USER)
  preferences  Preference?
  orders       Order[]
  reviews      Review[]
  createdAt    DateTime @default(now())
}

model Preference {
  id      String @id @default(cuid())
  userId  String @unique
  roast   String
  grind   String
  method  String
  user    User   @relation(fields: [userId], references: [id])
}

model Product {
  id         String  @id @default(cuid())
  name       String
  category   String
  notes      String?
  priceCents Int
  intensity  Int
  imageUrl   String?
  isActive   Boolean @default(true)
}

model Order {
  id         String     @id @default(cuid())
  userId     String
  totalCents Int
  items      OrderItem[]
  createdAt  DateTime   @default(now())
  user       User       @relation(fields: [userId], references: [id])
}

model OrderItem {
  id         String  @id @default(cuid())
  orderId    String
  productId  String
  quantity   Int
  priceCents Int
  order      Order   @relation(fields: [orderId], references: [id])
  product    Product @relation(fields: [productId], references: [id])
}

model Review {
  id        String   @id @default(cuid())
  userId    String
  rating    Int
  comment   String
  type      String
  status    String   @default("approved")
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id])
}
